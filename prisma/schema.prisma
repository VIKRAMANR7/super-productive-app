generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User model
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  password      String?
  image         String?
  bio           String?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  accounts         Account[]
  sessions         Session[]
  twoFactorEnabled Boolean   @default(false)
  twoFactorSecret  String?

  // Password reset
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime?

  // Email verification
  emailVerificationToken   String?   @unique
  emailVerificationExpires DateTime?

  @@index([email])
}

// OAuth accounts
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

// Sessions for remember me functionality
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  rememberMe   Boolean  @default(false)

  // Device information
  userAgent  String?
  ipAddress  String?
  deviceType DeviceType @default(UNKNOWN)

  // Timestamps
  createdAt  DateTime @default(now())
  lastUsedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model MagicLink {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([email])
  @@index([token])
}

// Verification tokens
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Enum for device types
enum DeviceType {
  DESKTOP
  MOBILE
  TABLET
  UNKNOWN
}
